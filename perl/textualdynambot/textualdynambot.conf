
# put your entries here



__END__
Anything below "__END__" is ignored by the script.

Examples:
Remember, a good way to test any of these is to use
"command: echo %n triggered the event by saying %s".

[text:*]
+in: *, efnet:private
-in: #foo, efnet:*, bobnet:#bar
+mode: @
command: echo Test response: %B%n%B said "%s"

[line:!unique]
+in: *
# how many times should I remember this command has been done?
capnum: 3
# capshared defaults to false, but is listed here as an example, also
# excepts false and off as options rather than 0
capshared: 0
command: echo I will only reply to this 3 times in 1 minute if said in this channel

[line:!shared]
# for this example, check all channels, as well as all private messages
+in: *, *:private
# Must set the capnum, otherwise capshared and captime don't matter
capnum: 4
# note that the cap limit tracking should have the totals merged
capshared: true
# this is in seconds, so 180 seconds is 3 minutes
captime: 180
command: echo I will only reply a total of 4 times in 3 minutes, even if privately messaged

# -- pm spam
# the text method matches anywhere in the message
[text:visit http://]
+in: private
# notices should never elicit a response
# this prevents possible infinite loops of spam
command: notice %n I do not accept solicitations.
# close the query tab -- ONLY use if you have 
# IRC->Auto open dialog windows on
# If you're flooded and xchat flips it off automatically,
#  this may close a channel tab
command: close
# Still, it's a neat application of it.

# -- reponses
# the line method matches the entire line of text
[line:!whoami]
# in any channel, not in an action or private message
# this is the default: the following two lines are implied
#+in: *
#+from: *
# only respond to people with a mode in the channel
# great for restricting use to trusted people
-mode: none
command: say You are: %n!%u@%a (%o%c)

# the regex method matches a regular expression
# to make it case insensitive, use (?i) at the beginning
# to anchor to the beggining or end use ^ or $
# (see perldoc perlre)
[regex:\cC\d+]
+in: mynetwork:#mychannel
# only apply to people without a mode
+mode: none
command: kick %n colors
# prevent immediate rejoin
command: mode %c +b *!*@%a
command: timer 7 unban *!*@%a

[line:!client *]
# restrict to your own masks
+from: *!bot_admin@this.is.my.address, *!bot_admin@my.other.address
# %$ is the last match in the text
# this command executes whatever comes after '!client ' --
# be careful with this
command: %$
# can be quite handy

# this will match any line that starts with two asterisks and a space
[line:\*\* *]
command: say You want %1 to be important?

# match any time at least 4 question marks are said in a row
[text:\?\?\?\?]
command: notice %n Do you need that many question marks?

# careful with this one, it's easy to match
[regex:(?i)^(asl|a\/s\/l\/)[?!/]*$]
# people without a mode only
+mode: none
command: kick %n No "%1"
# prevent immediate rejoin
command: mode %c +b *!*@%a
command: timer 7 unban *!*@%a

# make the client stop listening to people
[line:!ignore * *]
# only ops
+mode: @
command: say Ignoring %1 for %2 seconds
command: ignore %1 ALL
#command: timer %2 say Unignoring %1...
command: timer %2 unignore %1

# allow voiced users to voice others, for example
[line:!voice *]
+in: #mychannel
# any user mask
# voiced users on up
# (may want to include *, ., etc for networks which have them)
+mode: +, %, @
command: voice %$


[line:!test macros]
command: echo '%n' user's nick name
command: echo '%u' user's user name (ident)
command: echo '%a' user's address
command: echo '%c' channel where event took place (or their nick if in private)
command: echo '%o' user's mode in the channel (empty if private)
command: echo '%w' network name (or server name)
command: echo '%m' own nick name
command: echo '%d' current local date
command: echo '%y' current gmt date
command: echo '%t' current local time 
command: echo '%z' current gmt (zulu) time
command: echo '%s' full text
command: echo captures: 1-'%1', 2-'%2', 3-'%3', 4-'%4', 
command: echo           5-'%5', 6-'%6', 7-'%7', 8-'%8',
command: echo           9-'%9'
command: echo '%$' last capture, if any (otherwise empty)
command: echo '%%' single percent sign
command: echo %Bbold%O, original, %RReverse%O, %Uunderline%O, %C4,7Color%O
command: echo '\%s' escaped full text


#EOF
